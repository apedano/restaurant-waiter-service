quarkus.http.port=8081

#rest client configuration
quarkus.rest-client.order-resource.url=http://localhost:8080/
quarkus.rest-client.order-resource.scope=singleton
quarkus.rest-client.order-resource.verify-host=false


kafka.bootstrap.servers=localhost:29092
mp.messaging.outgoing.new-order.connector=smallrye-kafka
mp.messaging.outgoing.new-order.topic=new-order
mp.messaging.outgoing.new-order.key.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.new-order.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer
#order-updates Topic
mp.messaging.incoming.order-updates.connector=smallrye-kafka
mp.messaging.incoming.order-updates.topic=order-updates
mp.messaging.incoming.order-updates.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.order-updates.value.deserializer=com.apedano.restaurant.common.OrderDtoDeserializer
#kitchen-outgoing
mp.messaging.incoming.kitchen-outgoing.connector=smallrye-kafka
mp.messaging.incoming.kitchen-outgoing.topic=kitchen-outgoing
mp.messaging.incoming.kitchen-outgoing.key.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.incoming.kitchen-outgoing.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.kitchen-outgoing.value.deserializer=com.apedano.restaurant.common.KitchenOrderDtoDeserializer
#dish-served
mp.messaging.outgoing.dish-served.connector=smallrye-kafka
mp.messaging.outgoing.dish-served.topic=dish-served
mp.messaging.outgoing.dish-served.key.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.dish-served.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer
